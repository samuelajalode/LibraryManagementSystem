{"version":3,"file":"app.js","names":["express","require","app","mongoose","ejs","session","passport","multer","uid","path","sanitizer","methodOverride","localStrategy","MongoStore","flash","crypto","User","userRoutes","adminRoutes","bookRoutes","authRoutes","process","env","NODE_ENV","config","engine","renderFile","set","join","__dirname","use","json","urlencoded","extended","connect","DB_URL","useNewUrlParser","useUnifiedTopology","useCreateIndex","useFindAndModify","then","console","log","error","store","uri","collection","secret","SESSION_SECRET","saveUninitialized","resave","initialize","authenticate","serializeUser","deserializeUser","fileStorage","diskStorage","destination","req","file","cb","filename","concat","randomBytes","toString","originalname","filefilter","mimetype","storage","fileFilter","single","res","next","locals","currentUser","user","success","warning","PORT","listen"],"sources":["../src/app.js"],"sourcesContent":["const express = require(\"express\"),\n  app = express(),\n  mongoose = require(\"mongoose\"),\n  ejs = require(\"ejs\"),\n  session = require(\"express-session\"),\n  passport = require(\"passport\"),\n  multer = require(\"multer\"),\n  uid = require(\"uid\"),\n  path = require(\"path\"),\n  sanitizer = require(\"express-sanitizer\"),\n  methodOverride = require(\"method-override\"),\n  localStrategy = require(\"passport-local\"),\n  MongoStore = require(\"connect-mongodb-session\")(session),\n  flash = require(\"connect-flash\"),\n  crypto = require(\"crypto\"),\n  User = require(\"./models/user\"),\n  userRoutes = require(\"./routes/users\"),\n  adminRoutes = require(\"./routes/admin\"),\n  bookRoutes = require(\"./routes/books\"),\n  authRoutes = require(\"./routes/auth\");\n\n// const Seed = require('./seed');\n\n// uncomment below line for first time to seed database;\n// Seed(1000);\n\nif (process.env.NODE_ENV !== \"production\") require(\"dotenv\").config();\n\n// app config\napp.engine(\".html\", ejs.renderFile);\napp.set(\"view engine\", \"html\");\napp.set(\"views\", path.join(__dirname, \"views\"));\n\napp.use(methodOverride(\"_method\"));\n\napp.use(express.static(__dirname + \"/public\"));\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(sanitizer());\n\n// db config\nmongoose\n  .connect(process.env.DB_URL, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true,\n    useFindAndModify: false,\n  })\n  .then(() => console.log(\"MongoDB is connected\"))\n  .catch((error) => console.log(error));\n\n//PASSPORT CONFIGURATION\n\nconst store = new MongoStore({\n  uri: process.env.DB_URL,\n  collection: \"sessions\",\n});\n\napp.use(\n  session({\n    //must be declared before passport session and initialize method\n    secret: process.env.SESSION_SECRET,\n    saveUninitialized: false,\n    resave: false,\n    store,\n  })\n);\n\napp.use(flash());\n\napp.use(passport.initialize()); //must declared before passport.session()\napp.use(passport.session());\n\npassport.use(new localStrategy(User.authenticate()));\npassport.serializeUser(User.serializeUser());\npassport.deserializeUser(User.deserializeUser());\n\n// configure image file storage\nconst fileStorage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, \"images\");\n  },\n  filename: (req, file, cb) => {\n    cb(null, `${crypto.randomBytes(12).toString(\"hex\")}-${file.originalname}`);\n  },\n});\n\nconst filefilter = (req, file, cb) => {\n  if (file.mimetype === \"image/png\" || file.mimetype === \"image/jpg\" || file.mimetype === \"image/jpeg\") {\n    cb(null, true);\n  } else {\n    cb(null, false);\n  }\n};\n\napp.use(multer({ storage: fileStorage, fileFilter: filefilter }).single(\"image\"));\napp.use(\"/images\", express.static(path.join(__dirname, \"images\")));\n\napp.use((req, res, next) => {\n  res.locals.currentUser = req.user;\n  res.locals.error = req.flash(\"error\");\n  res.locals.success = req.flash(\"success\");\n  res.locals.warning = req.flash(\"warning\");\n  next();\n});\n\n//Routes\napp.use(userRoutes);\napp.use(adminRoutes);\napp.use(bookRoutes);\napp.use(authRoutes);\n\nconst PORT = process.env.PORT || 3000;\n\napp.listen(PORT, () => {\n  console.log(`server is running at http://localhost:${PORT}`);\n});\n"],"mappings":"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"}